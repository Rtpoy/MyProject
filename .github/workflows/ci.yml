name: CI Pipeline

on:
  pull_request:
    types: [opened, edited, reopened, synchronize, review_requested]
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run tests
        run: python -m unittest -v
  Flake8:
    runs-on: ubuntu-latest
    permissions:
        contents: read
        pull-requests: write
    steps:
      - name: Check out source repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Set up Python environment
        uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5.4.0
        with:
            python-version: "3.8"
    # Install specific flake8 version (this step is not required. Default is "latest").
      - run: pip install flake8==6.0.0
    # Install flake8 extensions (this step is not required. Default is "None").
      - run: pip install flake8-docstrings flake8-simplify flake8-unused-arguments flake8-quotes
      - name: flake8 Lint
        uses: reviewdog/action-flake8@b65981e158319f08cb7d0132f28bc0081e110adc # v3.15.2
        with:
            reporter: github-pr-review
            level: error      
            github_token: ${{ secrets.GITHUB_TOKEN }} 
        
  analysis:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Count lines of code with Cloc
        run: |
            sudo apt-get install -y cloc
            cloc src/ > cloc-report.txt
            cat cloc-report.txt
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  review-check:
    runs-on: ubuntu-latest
    steps:
      - name: Перевірка наявності схваленого код-рев’ю
        uses: actions/github-script@v6
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const { data: reviews } = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber
            });
            const approved = reviews.some(review => review.state === 'APPROVED');
            if (!approved) {
              core.setFailed("Код-рев’ю не схвалено");
            }
